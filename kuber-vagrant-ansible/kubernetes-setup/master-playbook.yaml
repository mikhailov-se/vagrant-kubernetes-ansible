- hosts: all
  become: true
  tasks:
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common

    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Install docker and its dependecies
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io
      notify:
        - docker status

    - name: Restart docker
      systemd:
        state: restarted
        name: docker

    - name: Add vagrant user to docker group
      user:
        name: vagrant
        group: docker

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - "kubelet={{ kubernetes_version }}"
          - "kubeadm={{ kubernetes_version }}"
          - "kubectl={{ kubernetes_version }}"

    - name: Configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
        create: yes
        mode: 0644

    - name: Config kubeadm images
      command: kubeadm config images pull
    
    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --apiserver-advertise-address="{{ "10.0.0.10" }}" --apiserver-cert-extra-sans="{{ "10.0.0.10" }}" --node-name k8s-master --pod-network-cidr="{{ "192.168.0.0/16" }}"

    - name: Setup kubeconfig for vagrant user
      command: "{{ item }}"
      with_items:
        - mkdir -p /home/vagrant/.kube
        - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
        - chown vagrant:vagrant /home/vagrant/.kube/config
          
    - name: Install Calico pod network
      become: false
      command: kubectl apply -f https://docs.projectcalico.org/v3.20/manifests/calico.yaml

    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Copy join command to local file
      copy: content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
      delegate_to: 127.0.0.1
      become: false

    - name: Copy kubeconfig to local file
      fetch:
        src: /home/vagrant/.kube/config
        dest: ./config
        flat: yes    

 
 # handlers file for master-node
  handlers:
    - name: docker status
      service: name=docker state=started